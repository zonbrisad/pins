#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# ----------------------------------------------------------------------------
#
# show arduinopins at shell
#
# File:     ardpins
# Author:   Peter Malmberg  <peter.malmberg@gmail.com>
# Org:      
# Date:     2023-04-30
# License:  
# Python:   >= 3.0
#
# ----------------------------------------------------------------------------

# Imports --------------------------------------------------------------------

import argparse
import traceback
import os
import sys
from rich import print
from rich.panel import Panel
from rich.table import Table
from dataclasses import dataclass, field


# Variables ------------------------------------------------------------------

class App:
    NAME = "ardpins"
    VERSION = "0.01"
    DESCRIPTION = "show arduinopins at shell"
    LICENSE = ""
    AUTHOR = "Peter Malmberg"
    EMAIL = "<peter.malmberg@gmail.com>"
    ORG = ""
    HOME = ""
    ICON = ""

#COLS = ["spi", "i2c", "uart", "pwm", "pwm"]

COLS = ["spi", "i2c", "uart", "pwm", "xxx"]

THEME = {
    "gpio": "#859900",
    "pinid": "#333333",
    "spi": "#d33682",
    "i2c": "#268bd2",
    "uart": "#6c71c4",
    "pwm": "#006B3C",
    "panel": "#ffffff on #000000",
    "diagram": "#555555",
    "adc": "#2aa198",
    "reset": "#2aa198",
    "power": "#dc322f",
    "ground": "#005b66",
    "ground_z": "#000000 on #555555",
    "ground_x": "#000000 on #222222",
    "run": "#df8f8e",
    "highlight": "#dc322f on white",
    "pin": "#FF9944",
    "analog":"#0492C2",
    "com":"#d33682",
    "interrupt":"#666666",
    "timer": "#006B3C",
}


@dataclass
class Pinout():
    board_name: str = ""
    pinout: str = ""
    ground_pins: list[int] = field(default_factory=list)    
    power_pins: list[int] = field(default_factory=list)
    adc_pins: list[int] = field(default_factory=list)
    run_pins: list[int] = field(default_factory=list)
    reset_pins: list[int] = field(default_factory=list)
    nc_pins: list[int] = field(default_factory=list)
    columns: list[int] = field(default_factory=list)

    def is_ground_pin(self, pin):
        return pin in self.ground_pins
    
    def is_power_pin(self, pin):
        return pin in self.power_pins
    
    def is_adc_pin(self, pin):
        return pin in self.adc_pins
    
    def is_run_pin(self, pin):
        return pin in self.run_pins
    
    def is_reset_pin(self, pin):
        return pin in self.reset_pins
    
    def pin_style(self, pin):
        style = THEME["gpio"]
        if self.is_ground_pin(pin): style = THEME["ground"]
        if self.is_power_pin(pin): style = THEME["power"]
        if self.is_adc_pin(pin): style = THEME["adc"]
        if self.is_run_pin(pin): style = THEME["run"]
        if self.is_reset_pin(pin): style = THEME["reset"]
        return style
    
    def build_row(self, row, show_indexes, find=None):
        for index in show_indexes:
            label = row[index]
            # Special case styling for GPIO labels and search results
            if find and (find in label or find in label.lower()):
                label = f'[{THEME["highlight"]}]{label}[/]'
            else:
                if index == 5 and row[6] != "":
                    label = f'[{self.pin_style(int(row[6]))}]{label}[/]'
                if index == 9 and row[8] != "":
                    label = f'[{self.pin_style(int(row[8]))}]{label}[/]'
            # Slight fudge for whitespace between labels
            if index >= 7:
                label = " " + label
            if index <= 6:
                label = label + " "
            yield label
            #     if index == 4 and row[5] != "":
            #         label = f'[{self.pin_style(int(row[5]))}]{label}[/]'
            #     if index == 8 and row[7] != "":
            #         label = f'[{self.pin_style(int(row[7]))}]{label}[/]'
            # # Slight fudge for whitespace between labels
            # if index >= 6:
            #     label = " " + label
            # if index <= 5:
            #     label = label + " "
            # yield label

    def split(self):
        r = []
        for line in self.pinout.splitlines()[1:]:
            c = []
            for i, col in enumerate(line.split("|")):
                if i == 7:
                    c.append(col)
                else:
                    c.append(col.strip())
            r.append(c)
        return r
    
rp_pico = Pinout(
    board_name = "Raspberry Pi Pico",
    ground_pins = (3, 8, 13, 18, 23, 28, 38),
    power_pins = (40, 39, 37, 36),
    adc_pins = (35, 34, 33, 32, 31), 
    run_pins = [30], 
#    columns = ["pin", "analog", "pwm", "com", "interrupt"],
    columns = ["spi", "i2c", "uart", "pwm", "interrupt"],
    pinout = """
 |      |         |        |        |      |  |     ┏━━━━━┓     |  |          |        |        |         |        |
 |      |         |        |        |      |  |┏━━━━┫     ┣━━━━┓|  |          |        |        |         |        |
 |PWM0 A|UART0 TX |I2C0 SDA|SPI0 RX |GP0   |1 |┃◎   ┗━━━━━┛   ◎┃|40|VBUS      |        |        |         |        |
 |PWM0 B|UART0 RX |I2C0 SCL|SPI0 CSn|GP1   |2 |┃◎ ▩           ◎┃|39|VSYS      |        |        |         |        |
 |      |         |        |        |GND   |3 |┃▣ └─GP25      ▣┃|38|GND       |        |        |         |        |
 |PWM1 A|UART0 CTS|I2C1 SDA|SPI0 SCK|GP2   |4 |┃◎  ▒▒▒        ◎┃|37|3v3 En    |        |        |         |        |
 |PWM1 B|UART0 RTS|I2C1 SCL|SPI0 TX |GP3   |5 |┃◎  ▒▒▒        ◎┃|36|3v3 Out   |        |        |         |        |
 |PWM2 A|UART1 TX |I2C0 SDA|SPI0 RX |GP4   |6 |┃◎             ◎┃|35|ADC VRef  |        |        |         |        |
 |PWM2 B|UART1 RX |I2C0 SCL|SPI0 CSn|GP5   |7 |┃◎             ◎┃|34|GP28 / A2 |SPI1 RX |I2C0 SDA|UART0 TX |PWM6 A  |
 |      |         |        |        |GND   |8 |┃▣             ▣┃|33|ADC GND   |        |        |         |        |
 |PWM3 A|UART1 CTS|I2C1 SDA|SPI0 SCK|GP6   |9 |┃◎   ▓▓▓▓▓▓▓   ◎┃|32|GP27 / A1 |SPI1 TX |I2C1 SCL|UART1 RTS|PWM5 B  |
 |PWM3 B|UART1 RTS|I2C1 SCL|SPI0 TX |GP7   |10|┃◎   ▓▓▓▓▓▓▓   ◎┃|31|GP26 / A0 |SPI1 SCK|I2C1 SDA|UART1 CTS|PWM5 A  |
 |PWM4 A|UART1 TX |I2C0 SDA|SPI1 RX |GP8   |11|┃◎   ▓▓▓▓▓▓▓   ◎┃|30|run       |        |        |         |        |
 |PWM4 B|UART1 RX |I2C0 SCL|SPI1 CSn|GP9   |12|┃◎   ▓▓▓▓▓▓▓   ◎┃|29|GP22      |SPI0 SCK|I2C1 SDA|UART1 CTS|PWM3 A  |
 |      |         |        |        |GND   |13|┃▣             ▣┃|28|GND       |        |        |         |        |
 |PWM5 A|UART1 CTS|I2C1 SDA|SPI1 SCK|GP10  |14|┃◎             ◎┃|27|GP21      |SPI0 CSn|I2C0 SCL|UART1 RX |PWM2 B  |
 |PWM5 B|UART1 RTS|I2C1 SCL|SPI1 TX |GP11  |15|┃◎             ◎┃|26|GP20      |SPI0 RX |I2C0 SDA|UART1 TX |PWM2 A  |
 |PWM6 A|UART0 TX |I2C0 SDA|SPI1 RX |GP12  |16|┃◎             ◎┃|25|GP19      |SPI0 TX |I2C1 SCL|UART0 RTS|PWM1 B  |
 |PWM6 B|UART0 RX |I2C0 SCL|SPI1 CSn|GP13  |17|┃◎             ◎┃|24|GP18      |SPI0 SCK|I2C1 SDA|UART0 CTS|PWM1 A  |
 |      |         |        |        |GND   |18|┃▣             ▣┃|23|GND       |        |        |         |        |
 |PWM7 A|UART0 CTS|I2C1 SDA|SPI1 SCK|GP14  |19|┃◎             ◎┃|22|GP17      |SPI0 CSn|I2C0 SCL|UART0 RX |PWM0 B  |
 |PWM7 B|UART0 RTS|I2C1 SCL|SPI1 TX |GP15  |20|┃◎    ◎ ▣ ◎    ◎┃|21|GP16      |SPI0 RX |I2C0 SDA|UART0 TX |PWM0 A  |
 |      |         |        |        |      |  |┗━━━━━━━━━━━━━━━┛|  |          |        |        |         |        |
"""
)

arduino_pro_mini = Pinout(
    board_name = "Arduino Pro Mini",
    ground_pins = [16, 11, 29, 30],
    power_pins = [9, 12, 28],
    #adc_pins = [35, 34, 33, 32, 31], 
    reset_pins = [10, 15],
    columns = ["pin", "analog", "pwm", "com", "interrupt"],
    pinout = """
             |         |    |       |     | VCC |28| ━━━━━━┓ ┏━━━━━━ |27|     | PD0  |      |    | RXD   | PCINT16        
             |         |    |       |     | GND |29| ━━━━┓ ┃ ┃ ┏━━━━ |26|     | PD1  |      |    | TXD   | PCINT17        
             |         |    |       |     | GND |30| ━━┓ ┃ ┃ ┃ ┃ ┏━━ |25|     | DTR  |      |    |       | Reset via cap         
             |         |    |       |     |     |  |┏━━╋━╋━╋━╋━╋━╋━━┓|  |     |      |      |    |       |         
             |         |    |       |     |     |  |┃  ▣ ▣ ◎ ◎ ◎ ◎  ┃|  |     |      |      |    |       |   
     PCINT17 | TXD     |    |       | PD1 | D1  |13|┃◎             ◎┃|12|RAW  |      |      |    |       |   
     PCINT16 | RXD     |    |       | PD0 | D0  |14|┃◎             ▣┃|11|GND  |      |      |    |       |   
     PCINT14 |         |    |       | PC6 |Reset|15|┃◎             ◎┃|10|Reset| PC6  |      |    |       | PCINT14 
             |         |    |       |     | GND |16|┃▣             ◎┃| 9|VCC  |      |      |    |       |  
     PCINT18 | INT0    |    |       | PD2 | D2  |17|┃◎  ┏━━━━━━━◎  ◎┃| 8|D17  | PC3  | ADC3 |    |       | PCINT11 
     PCINT19 | INT1    |OC2B|       | PD3 | D3  |18|┃◎  ┃ ┏━━━━━◎  ◎┃| 7|D16  | PC2  | ADC2 |    |       | PCINT10 
             |         |    |       | PD4 | D4  |19|┃◎  ┃ ┃        ◎┃| 6|D15  | PC1  | ADC1 |    |       | PCINT9 
             |         |OC0B|       | PD5 | D5  |20|┃◎  ┃ ┃        ◎┃| 5|D14  | PC0  | ADC0 |    |       | PCINT8 
             |         |OC0A| AIN0  | PD6 | D6  |21|┃◎  ┃ ┃  [LED] ◎┃| 4|D13  | PB5  |      |    |       |         
     PCINT14 |         |    | AIN1  | PD7 | D7  |22|┃◎  ┃ ┃ ┏━━━◎  ◎┃| 3|D12  | PB4  |      |    | MISO  | PCINT4 
             |         |    |       | PB0 | D8  |23|┃◎  ┃ ┃ ┃ ┏━◎  ◎┃| 2|D11  | PB3  |      |OC2A| MOSI  | PCINT3 
             |         |OC1A|       | PB1 | D9  |24|┃◎  ┃ ┃ ┃ ┃    ◎┃| 1|D10  | PB2  |      |OC1B| SS    | PCINT2 
             |         |    |       |     |     |  |┗━━━╋━╋━╋━╋━━━━━┛|  |     |      |      |    |       |         
             |  SCL    |    | ADC5  | PC5 | D19 |33| ━━━┛ ┃ ┃ ┗━━━━━━|31|     |      | ADC6 |    |       |         
             |  SDA    |    | ADC4  | PC4 | D18 |34| ━━━━━┛ ┗━━━━━━━━|32|     |      | ADC7 |    |       |               
"""
)

arduino_nano = Pinout(
    board_name = "Arduino Nano",
    ground_pins = (29, 4, 23),
    power_pins = (17, 27, 30),
    #adc_pins = (35, 34, 33, 32, 31), 
    reset_pins = (3, 28),
    columns = ["pin", "analog", "pwm", "com", "interrupt"],
    pinout = """
             |       |  |       |     |      |  |     ┏━━━━━┓     |  |     |      |      |    |       |         
             |       |  |       |     |      |  |┏━━━━┫ USB ┣━━━━┓|  |     |      |      |    |       |         
     PCINT5  |  SCK  |  |       | PB5 |D13   |16|┃◎LED┗━━━━━┛   ◎┃|15|D12  | PB4  |      |    | MISO  | PCINT4  
             |       |  |       |     |+3V3  |17|┃◎             ◎┃|14|D11  | PB3  |      |OC2A| MOSI  | PCINT3  
             |       |  |       |     |ARef  |18|┃◎             ◎┃|13|D10  | PB2  |      |OC1B| SS    | PCINT2  
     PCINT8  |       |  | ADC0  | PC0 |D14   |19|┃◎  ▒▒▒        ◎┃|12|D9   | PB1  |      |OC1A|       | PCINT1  
     PCINT9  |       |  | ADC1  | PC1 |D15   |20|┃◎  ▒▒▒        ◎┃|11|D8   | PB0  |      |    |       | PCINT0  
     PCINT10 |       |  | ADC2  | PC2 |D16   |21|┃◎             ◎┃|10|D7   | PD7  | AIN1 |    |       | PCINT23 
     PCINT11 |       |  | ADC3  | PC3 |D17   |22|┃◎             ◎┃| 9|D6   | PD6  | AIN0 |OC0A|       | PCINT22 
     PCINT12 |  SDA  |  | ADC4  | PC4 |D18   |23|┃◎             ◎┃| 8|D5   | PD5  |      |OC0B|       | PCINT21 
     PCINT13 |  SCL  |  | ADC5  | PC5 |D19   |24|┃◎   ▓▓▓▓▓▓▓   ◎┃| 7|D4   | PD4  |      |    |       | PCINT20 
             |       |  |       |     |D20   |25|┃◎   ▓▓▓▓▓▓▓   ◎┃| 6|D3   | PD3  |      |OC2B| INT1  | PCINT19 
             |       |  |       |     |D21   |26|┃◎   ▓▓▓▓▓▓▓   ◎┃| 5|D2   | PD2  |      |    | INT0  | PCINT18 
             |       |  |       |     |+5V   |27|┃◎   ▓▓▓▓▓▓▓   ▣┃| 4|GND  |      |      |    |       |         
     PCINT14 |       |  |       | PC6 |Reset |28|┃◎             ◎┃| 3|Reset| PC6  |      |    |       | PCINT14 
             |       |  |       |     |GND   |29|┃▣    ◎ ◎ ◎    ◎┃| 2|D0   | PD0  |      |    | RXD   | PCINT16 
             |       |  |       |     |Vin   |30|┃◎    ◎ ◎ ◎    ◎┃| 1|D1   | PD1  |      |    | TXD   | PCINT17 
             |       |  |       |     |      |  |┗━━━━━━━━━━━━━━━┛|  |     |      |      |    |       |         
"""
)

arduino_uno = Pinout(
    board_name = "Arduino Uno",
    ground_pins = [15, 23, 24],
    power_pins = [21, 22, 25],
#    adc_pins = [16, 26, 27, 28, 29, 30, 31], 
    reset_pins = [20],
    nc_pins = [19],
    #columns = ["spi", "i2c", "uart", "pwm", "aaa"],
    columns = ["pin", "analog", "timer", "com", "interrupt"],
    pinout = """
             |         |  |      |     |      |  |                        ┏━━━━━━━┓        |  |     |      |      |    |       |         
             |         |  |      |     |      |  |                        ┃       ┃        |  |     |      |      |    |       |         
             |         |  |      |     |      |  |┏━━━━━━━━━━━━━━━━━━━━━━━┫  USB  ┣━━━━━━━┓|  |     |      |      |    |       |      
             |         |  |      |     |      |  |┃                       ┃       ┃       ┃|  |     |      |      |    |       |   
             |         |  |      |     |      |  |┃                       ┗━━━━━━━┛       ┃|  |     |      |      |    |       |   
             |         |  |      |     |      |  |┃                                       ┃|  |     |      |      |    |       |   
             |         |  |      |     |      |  |┃                                ◎ ◎    ┃|  |     |      |      |    |       |                   
             |         |  |      |     |      |  |┃                          ▓▓▓   ◎ ◎   ◎┃|18|D19  | PC5  |      |    | SCL   | PCINT13 
             |         |  |      |     |      |  |┃                          ▓▓▓   ◎ ◎   ◎┃|17|D18  | PC4  |      |    | SDA   | PCINT12 
             |         |  |      |     |      |  |┃                                      ◎┃|16|AREF |      |      |    |       | 
             |         |  |      |     |      |  |┃                                      ▣┃|15|GND  |      |      |    |       | 
             |         |  |      |     | NC   |19|┃◎        ▓▓▓▓▓▓                [LED]┃ ◎┃|14|D13  | PB5  |      |    | SCK   | PCINT5 
             |         |  |      |     |IOref |10|┃◎        ▓▓▓▓▓▓                     ┃ ◎┃|13|D12  | PB4  |      |    | MISO  | PCINT4 
     PCINT14 |         |  |      | PC6 |Reset |20|┃◎        ▓▓▓▓▓▓                   P ┃ ◎┃|12|D11  | PB3  |      |OC2A| MOSI  | PCINT3 
             |         |  |      |     |+3.3V |21|┃◎ ┃ P    ▓▓▓▓▓▓                   W ┃ ◎┃|11|D10  | PB2  |      |OC1B| SS    | PCINT2 
             |         |  |      |     |+5V   |22|┃◎ ┃ O    ▓▓▓▓▓▓                   M ┃ ◎┃|10|D9   | PB1  |      |OC1A|       | PCINT1 
             |         |  |      |     |GND   |23|┃▣ ┃ W    ▓▓▓▓▓▓                     ┃ ◎┃| 9|D8   | PB0  |      |    |       | PCINT0 
             |         |  |      |     |GND   |24|┃▣ ┃ E    ▓▓▓▓▓▓                        ┃|  |     |      |      |    |       |  
             |         |  |      |     |Vin   |25|┃◎ ┃ R    ▓▓▓▓▓▓                   D ┃ ◎┃| 8|D7   | PD7  | AIN1 |    |       | PCINT23 
             |         |  |      |     |      |  |┃         ▓▓▓▓▓▓                   I ┃ ◎┃| 7|D6   | PD6  | AIN0 |OC0A|       | PCINT22 
     PCINT8  |         |  |ADC0  | PC0 |D14   |26|┃◎ ┃ A    ▓▓▓▓▓▓                   G ┃ ◎┃| 6|D5   | PD5  |      |OC0B|       | PCINT21 
     PCINT9  |         |  |ADC1  | PC1 |D15   |27|┃◎ ┃ N    ▓▓▓▓▓▓                   I ┃ ◎┃| 5|D4   | PD4  |      | T0 |       | PCINT20 
     PCINT10 |         |  |ADC2  | PC2 |D16   |28|┃◎ ┃ A    ▓▓▓▓▓▓   ┏━━━┓           T ┃ ◎┃| 4|D3   | PD3  |      |OC2B| INT1  | PCINT19      
     PCINT11 |         |  |ADC3  | PC3 |D17   |29|┃◎ ┃ L    ▓▓▓▓▓▓   ┃ ◎ ┃           A ┃ ◎┃| 3|D2   | PD2  |      |    | INT0  | PCINT18 
     PCINT12 |  SDA    |  |ADC4  | PC4 |D18   |30|┃◎ ┃ O    ▓▓▓▓▓▓   ┗━━━┛           L ┃ ◎┃| 2|D1   | PD1  |      |    | TXD   | PCINT17 
     PCINT13 |  SCL    |  |ADC5  | PC5 |D19   |31|┃◎ ┃ G    ▓▓▓▓▓▓   ◎ ◎ ◎             ┃ ◎┃| 1|D0   | PD0  |      |    | RXD   | PCINT16 
             |         |  |      |     |      |  |┗━┓                ◎ ◎ ◎     ┏━━━━━━━━━━┛|  |     |      |      |    |       |         
             |         |  |      |     |      |  |  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛           |  |     |      |      |    |       |         
"""
)
arduino_mega = Pinout(
    board_name = "Arduino Mega",
    ground_pins = [23, 32, 33],
    power_pins = [30, 31, 34],
    adc_pins = [], 
    reset_pins = [29],
    nc_pins = [27],
    pinout = """
             |         |       |     |      |  |                        ┏━━━━━━━┓        |  |     |      |      |       |         
             |         |       |     |      |  |                        ┃       ┃        |  |     |      |      |       |         
             |         |       |     |      |  |┏━━━━━━━━━━━━━━━━━━━━━━━┫  USB  ┣━━━━━━┓|  |     |      |      |       |      
             |         |       |     |      |  |┃                       ┃       ┃      ┃|  |     |      |      |       |   
             |         |       |     |      |  |┃                       ┗━━━━━━━┛      ┃|  |     |      |      |       |   
             |         |       |     |      |  |┃                                      ┃|  |     |      |      |       |       
             |         |       |     |      |  |┃                                     ◎┃|26|D21  | PD0  |      | SCL   | INT0 
             |         |       |     |      |  |┃                                     ◎┃|25|D20  | PD1  |      | SDA   | INT1     
             |         |       |     |      |  |┃                                     ◎┃|24|AREF |      |      |       |  
             |         |       |     |      |  |┃                                     ◎┃|23|GND  |      |      |       |  
             |         |       |     | NC   |27|┃◎                              [LED] ◎┃|22|D13  | PB7  |      | PWM   | PCINT7 
             |         |       |     |IOref |28|┃▣                                    ◎┃|21|D12  | PB6  |      | PWM   | PCINT6 
             |         |       |     |Reset |29|┃◎                                    ◎┃|20|D11  | PB5  |      | PWM   | PCINT5 
             |         |       |     |+3.3V |30|┃▣                                    ◎┃|19|D10  | PB4  |      | PWM   | PCINT4 
             |         |       |     |+5V   |31|┃▣                                    ◎┃|18|D9   | PH6  |      | PWM   |  
             |         |       |     |GND   |32|┃▣                                    ◎┃|17|D8   | PH5  |      | PWM   |  
             |         |       |     |GND   |33|┃▣                                     ┃|  |     |      |      |       |  
             |         |       |     |Vin   |34|┃▣            ▓▓▓▓▓▓▓▓▓▓▓             ◎┃|16|D7   | PH4  |      | PWM   |                       
             |         |       |     |      |  |┃             ▓▓▓▓▓▓▓▓▓▓▓             ◎┃|15|D6   | PH3  |      | PWM   | PCINT8
             |         | ADC0  | PF0 |D54   |35|┃◎            ▓▓▓▓▓▓▓▓▓▓▓             ◎┃|14|D5   | PE3  | AIN1 |       |  
             |         | ADC1  | PF1 |D55   |36|┃▣            ▓▓▓▓▓▓▓▓▓▓▓             ◎┃|13|D4   | PG5  |      |       |  
             |         | ADC2  | PF2 |D56   |37|┃◎            ▓▓▓▓▓▓▓▓▓▓▓             ◎┃|12|D3   | PE5  |      |       | INT5 
             |         | ADC3  | PF3 |D57   |38|┃▣                                    ◎┃|11|D2   | PE4  |      |       | INT4 
             |  TCK    | ADC4  | PF4 |D58   |39|┃▣               ◎ ◎ ◎                ◎┃|10|D1   | PE1  |      | TXD0  | PCINT 
             |  TMS    | ADC5  | PF5 |D59   |41|┃▣               ◎ ◎ ◎                ◎┃| 9|D0   | PE0  |      | RXD0  | PCINT 
             |  TDO    | ADC6  | PF6 |D60   |42|┃▣                                     ┃|  |     |      |      |       |  
             |  TDI    | ADC7  | PF7 |D61   |43|┃▣                                    ◎┃| 8|D14  | PJ1  |      | TXD3  | PCINT10 
             |         |       |     |      |  |┃                                     ◎┃| 7|D15  | PJ0  |      | RXD3  | PCINT9 
    PCINT16  |         | ADC8  | PK0 |D62   |44|┃◎                                    ◎┃| 6|D16  | PH1  |      | TXD2  |  
    PCINT17  |         | ADC9  | PK1 |D63   |45|┃◎                                    ◎┃| 5|D17  | PH0  |      | RXD2  |  
    PCINT18  |         | ADC10 | PK2 |D64   |46|┃◎                                    ◎┃| 4|D18  | PD3  |      | TXD1  | INT3 
    PCINT19  |         | ADC11 | PK3 |D65   |47|┃◎                                    ◎┃| 3|D19  | PD2  |      | RXD1  | INT2 
    PCINT20  |         | ADC12 | PK4 |D66   |48|┃◎                                    ◎┃| 2|D20  | PD1  |      | SDA   | INT1      
    PCINT21  |         | ADC13 | PK5 |D67   |49|┃◎                                    ◎┃| 1|D21  | PD0  |      | SCL   | INT0 
    PCINT22  |         | ADC14 | PK6 |D68   |50|┃◎                                     ┃|  |     |      |      |       |  
    PCINT23  |         | ADC15 | PK7 |D69   |51|┃◎                                     ┃|  |     |      |      |       |
             |         |       |     |      |  |┃   ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎┃|  |     |      |      |       |  
             |         |       |     |      |  |┃   ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎ ◎┃|  |     |      |      |       |  
             |         |       |     |      |  |┗━┓                        ┏━━━━━━━━━━━┛|  |     |      |      |       |         
             |         |       |     |      |  |  ┗━━━━━━━━━━━━━━━━━━━━━━━━┛           |  |     |      |      |       | 
""")
arduino_mega_con = Pinout(
    board_name = "Arduino Mega connector",
    ground_pins = [23, 32, 33],
    power_pins = [30, 31, 34],
    adc_pins = [], 
    reset_pins = [29],
    nc_pins = [27],
    pinout = """    
             |         |  |     |     |  |  ┏━━━━┓    |  |     |   |      |   |  
             |         |  |     | +5V |  |  ┃◎  ◎┃    |  | +5V |   |      |   |  
             |         |  | PC1 |     |22|  ┃◎  ◎┃    |23|     |   |      |   |  
             |         |  | PC3 |     |24|  ┃◎  ◎┃    |25|     |   |      |   | 
             |         |  | PC5 |     |26|  ┃◎  ◎┃    |27|     |   |      |   |  
             |         |  | PC7 |     |28|  ┃◎  ◎┃    |29|     |   |      |   |  
             |         |  | PA6 |     |30|  ┃◎  ◎┗━┓  |31|     |   |      |   |  
             |         |  | PA4 |     |32|  ┃◎  ◎  ┃  |33|     |   |      |   |  
             |         |  | PA2 |     |34|  ┃◎  ◎  ┃  |35|     |   |      |   |  
             |         |  | PA0 |     |36|  ┃◎  ◎  ┃  |37|     |   |      |   |  
             |         |  | PD7 |     |38|  ┃◎  ◎  ┃  |39|     |   |      |   |  
             |         |  | PG1 |     |40|  ┃◎  ◎  ┃  |41|     |   |      |   |  
             |         |  | PL7 |     |42|  ┃◎  ◎  ┃  |43|     |   |      |   |  
             |         |  | PL5 |     |44|  ┃◎  ◎  ┃  |45|     |   |      |   |  
             |         |  | PL3 |     |46|  ┃◎  ◎  ┃  |47|     |   |      |   |  
             |         |  | PL1 |     |48|  ┃◎  ◎  ┃  |49|     |   |      |   |  
             |         |  | PB3 |     |50|  ┃◎  ◎  ┃  |51|     |   |      |   |  
             |         |  | PB1 |     |52|  ┃◎  ◎  ┃  |53|     |   |      |   |  
             |         |  |     | GND |  |  ┃◎  ◎  ┃  |  | GND |   |      |   |  
             |         |  |     |     |  |  ┃    ┏━┛  |  |     |   |      |   |  
             |         |  |     |     |  |  ┃    ┃    |  |     |   |      |   |  
             |         |  |     |     |  |  ┗━━━━┛    |  |     |   |      |   |   
"""
)


# Code -----------------------------------------------------------------------



def print_pinout(pinout):
    show_indexes = []
    grid = Table.grid(expand=True)
    opts_show = pinout.columns
    opts_find = None
    opts_pins = True
    opts_hide_gpio = False 
    for label in reversed(opts_show):
        grid.add_column(justify="left", style=THEME[label], no_wrap=True)
        show_indexes.append(list(reversed(pinout.columns)).index(label))

    if not opts_hide_gpio:
        grid.add_column(justify="right", style=THEME["gpio"], no_wrap=True)
        show_indexes += [5]

    if opts_pins:
        grid.add_column(justify="right", style=THEME["pinid"], no_wrap=True)
        show_indexes += [6]

    grid.add_column(justify="left", no_wrap=True, style=THEME["diagram"])
    show_indexes += [7]

    if opts_pins:
        grid.add_column(justify="left", style=THEME["pinid"], no_wrap=True)
        show_indexes += [8]

    if not opts_hide_gpio:
        grid.add_column(justify="left", style=THEME["gpio"], no_wrap=True)
        show_indexes += [9]

    for label in opts_show:
        grid.add_column(justify="left", style=THEME[label], no_wrap=True)
        show_indexes.append(10 + pinout.columns.index(label))

    for row in pinout.split():
        grid.add_row(*pinout.build_row(row, show_indexes, find=opts_find))


    layout = Table.grid(expand=True)
    layout.add_row(grid)
#    layout.add_row("@gadgetoid\nhttps://pico.pinout.xyz")

    print(Panel(
        layout,
        title=pinout.board_name,
        expand=False,
        style=THEME["panel"]))
    
# def print_pinout(pinout):
#     show_indexes = []
#     grid = Table.grid(expand=True)
#     opts_show = COLS
#     opts_find = None
#     opts_pins = True
#     opts_hide_gpio = False 
#     for label in reversed(opts_show):
#         grid.add_column(justify="left", style=THEME[label], no_wrap=True)
#         show_indexes.append(list(reversed(COLS)).index(label))

#     if not opts_hide_gpio:
#         grid.add_column(justify="right", style=THEME["gpio"], no_wrap=True)
#         show_indexes += [4]

#     if opts_pins:
#         grid.add_column(justify="right", style=THEME["pins"], no_wrap=True)
#         show_indexes += [5]

#     grid.add_column(justify="left", no_wrap=True, style=THEME["diagram"])
#     show_indexes += [6]

#     if opts_pins:
#         grid.add_column(justify="left", style=THEME["pins"], no_wrap=True)
#         show_indexes += [7]

#     if not opts_hide_gpio:
#         grid.add_column(justify="left", style=THEME["gpio"], no_wrap=True)
#         show_indexes += [8]

#     for label in opts_show:
#         grid.add_column(justify="left", style=THEME[label], no_wrap=True)
#         show_indexes.append(9 + COLS.index(label))

#     for row in pinout.split():
#         grid.add_row(*pinout.build_row(row, show_indexes, find=opts_find))


#     layout = Table.grid(expand=True)
#     layout.add_row(grid)
# #    layout.add_row("@gadgetoid\nhttps://pico.pinout.xyz")

#     print(Panel(
#         layout,
#         title=pinout.board_name,
#         expand=False,
#         style=THEME["panel"]))


# def valid_label(label):
#     if label not in COLS:
#         usage(f"Invalid interface \"{label}\"")
#     return label

def main() -> None:
    parser = argparse.ArgumentParser(
        prog=App.NAME,
        description=App.DESCRIPTION,
        epilog="",
        add_help=True)
    
    parser.add_argument("--pro", action="store_true", default=False,
                        help="Arduino Pro mini")
    parser.add_argument("--nano", action="store_true", default=False,
                        help="Arduino nano")
    parser.add_argument("--uno", action="store_true", default=False,
                        help="Arduino Uno")
    parser.add_argument("--mega", action="store_true", default=False,
                        help="Arduino mega")
    parser.add_argument("--pico", action="store_true", default=False,
                        help="Raspberry pi Pico")
    parser.add_argument("--debug", action="store_true", default=False,
                        help="Print debug messages")
    parser.add_argument("--version", action="version",
                        version=f"{App.NAME} {App.VERSION}",
                        help="Print version information")
    args = parser.parse_args()

    if args.pico:
        print_pinout(rp_pico)

    if args.pro:
        print_pinout(arduino_pro_mini)

    if args.nano:
        print_pinout(arduino_nano)

    if args.uno:
        print_pinout(arduino_uno)
    
    if args.mega:
        print_pinout(arduino_mega)
        print_pinout(arduino_mega_con)

if __name__ == "__main__":
    try:
        main()
        sys.exit(0)
    except KeyboardInterrupt as e: # Ctrl-C
        raise e
    except SystemExit as e:        # sys.exit()
        raise e
    except Exception as e:
        print('ERROR, UNEXPECTED EXCEPTION')
        print(str(e))
        traceback.print_exc()
        os._exit(1)
